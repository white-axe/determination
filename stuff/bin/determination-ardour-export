#!/bin/bash
# Determination - Deterministic rendering environment for music and art
# Copyright (C) 2024 Liu Hao <whiteaxe@tuta.io>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3.

set -eEo pipefail

help () {
  >&2 echo ''
  >&2 echo 'determination-ardour-export: export an Ardour project deterministically as a master FLAC file and track FLAC files'
  usage
}

usage() {
  >&2 echo ''
  >&2 echo 'Usage: determination-ardour-export -i path [options]'
  >&2 echo '    path        Path to the .ardour file to export, including the file extension'
  >&2 echo 'Options:'
  >&2 echo '    -o path     Directory where the FLAC files should be exported'
  >&2 echo '                (default: the session export directory)'
  >&2 echo '    -m name     Filename of the exported master FLAC file without extension'
  >&2 echo '                (default: master)'
  >&2 echo '    -t name     Filename prefix of the exported track FLAC files'
  >&2 echo '                (default: track)'
  >&2 echo ''
}

input=''
output=''
master='master'
track='track'

while [[ "$#" -gt 0 ]]; do
  case $1 in
    -i) input="$(realpath "$2")"; shift ;;
    -o) output="$2"; shift ;;
    -m) master="$2"; shift ;;
    -t) track="$2"; shift ;;
    -h|--help) help; exit 0 ;;
    *) usage; exit 1 ;;
  esac
  shift
done

if [[ -z "$input" ]]; then usage; exit 1; fi
if [[ ! "$input" =~ .*\.ardour ]]; then >&2 echo 'Error: Input file extension must be .ardour'; exit 1; fi
project="$(dirname "$input")"
session="$(basename "$input" .ardour)"

>&2 echo -e "\e[96mExporting session \"$input\"\e[0m"

export LV2_PATH="$LV2_PATH:/lib/lv2"
export LXVST_PATH="$LXVST_PATH:/lib/vst"
export DETERMINATION_ARDOUR_PROJECT="$project"
export DETERMINATION_ARDOUR_SESSION="$session"
export DETERMINATION_ARDOUR_TRACK_PREFIX="$track"
if [[ ! -z "$output" ]]; then
  mkdir -p "$output"
  output="$(realpath "$output")"
  export DETERMINATION_ARDOUR_EXPORT_DIR="$output"
else
  output="$project/export"
fi

n="$(.determination-ardour-ntracks.lua | tail -n 1 | awk '{print $NF}')"
j='0'

for i in $(seq "$n"); do
  >&2 echo -e "\e[96mExporting track $i of $n for \"$input\"\e[0m"

  export DETERMINATION_ARDOUR_TRACK="$i"
  .determination-ardour-isolate.lua
  until .determination-ardour-export.lua; do :; done # Sometimes this command segfaults so we run it repeatedly until it succeeds

  rm -f "$project/~exporttmp-$session.ardour"
  rm -f "$project/~exporttmp-$session.ardour.bak"

  >&2 echo -e "\e[96mCanonicalizing track $i of $n for \"$input\"\e[0m"

  file="$output/$track$(printf %03d "$i").flac"
  flac --force -8 --no-padding --no-seektable "$file"
  metaflac --remove-all --dont-use-padding "$file"
  metaflac --add-seekpoint=10s --dont-use-padding "$file"

  >&2 echo -e "\e[96mAdding track $i of $n to master for \"$input\"\e[0m"

  if [[ "$i" -eq 1 ]]; then
    cp "$file" "$output/$master.flac"
  else
    # Why don't we just use the ffmpeg amix filter and/or the -ac option? Because that uses floating-point arithmetic!
    # Doing it this way uses only integer arithmetic and so is less fragile.
    ffmpeg -nostdin -y -i "$output/$master.flac" -i "$file" -filter_complex 'amerge=inputs=2,pan=stereo|c0=c0+c2|c1=c1+c3' "$output/~exporttmp-$master.flac"
    mv "$output/~exporttmp-$master.flac" "$output/$master.flac"
  fi

  j="$i"
done

>&2 echo -e "\e[96mCanonicalizing master for \"$input\"\e[0m"

flac --force -8 --no-padding --no-seektable "$output/$master.flac"
metaflac --remove-all --dont-use-padding "$output/$master.flac"
metaflac --add-seekpoint=10s --dont-use-padding "$output/$master.flac"

>&2 echo -e "\e[96mExport for \"$input\" complete!\e[0m"
