name: Build
on:
  push:
    paths-ignore:
      - COPYING
      - LICENSE
      - '**.md'
  pull_request:
    paths-ignore:
      - COPYING
      - LICENSE
      - '**.md'
  release:
    types:
      - published
  workflow_dispatch:
permissions:
  contents: read
  attestations: write
  id-token: write
  packages: write
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
      - name: Build
        run: |
          nix build -L
          mv result docker-image-determination.tar.gz
      - name: Attest artifact
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: docker-image-determination.tar.gz
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-determination
          path: docker-image-determination.tar.gz
      - name: Install Skopeo from Nixpkgs
        run: |
          nix build -L '.#skopeo'
          ln -s result/bin/skopeo skopeo
      - name: Generate summary
        run: |
          echo '### Skopeo Inspection' >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          ./skopeo inspect docker-archive:docker-image-determination.tar.gz | jq -M >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '### Manifest' >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          ./skopeo inspect --raw docker-archive:docker-image-determination.tar.gz | jq -M >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      - name: Upload to ghcr.io
        id: upload
        if: ${{ github.repository_owner == 'white-axe' && github.event_name == 'release' }}
        run: |
          ./skopeo login -u ${{ github.actor }} -p ${{ github.token }} --compat-auth-file ~/.docker/config.json ghcr.io
          tag=${{ github.event.release.tag_name }}
          old=
          if [[ ${tag#v} =~ ^[[:digit:]] ]]; then
            tag=${tag#v}
          fi
          while [[ $tag != $old ]]; do
            echo Tag $tag
            ./skopeo copy --preserve-digests docker-archive:docker-image-determination.tar.gz docker://ghcr.io/${{ github.repository }}:$tag
            old=$tag
            tag=${tag%.*}
          done
          echo Tag latest
          ./skopeo copy --preserve-digests --digestfile digest docker-archive:docker-image-determination.tar.gz docker://ghcr.io/${{ github.repository }}:latest
          cat digest
          echo "digest=$(cat digest)" >> $GITHUB_OUTPUT
      - name: Attest ghcr.io image
        if: ${{ github.repository_owner == 'white-axe' && github.event_name == 'release' }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.upload.outputs.digest }}
          push-to-registry: true
