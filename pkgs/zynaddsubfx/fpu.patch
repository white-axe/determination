# Determination - Deterministic rendering environment for white-axe's music
# Copyright (C) 2024 Liu Hao <whiteaxe@tuta.io>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This patch disables floating-point optimizations so that ZynAddSubFX's output
# doesn't change depending on what CPU the program is running on or what
# compiler version we're using.

--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -261,7 +261,7 @@ set (BuildOptions_SSE
 check_cxx_compiler_flag("${BuildOptions_SSE} -Werror" SUPPORT_SSE)
 
 set (BuildOptionsBasic
-    "-std=c++11 -Wno-unused-parameter -O3 -ffast-math -fomit-frame-pointer"
+    "-std=c++11 -Wno-unused-parameter -O3 -fomit-frame-pointer"
     CACHE STRING "basic X86 compiler options"
 )
 STRING(APPEND BuildOptionsBasic " ${BuildOptions_ExtendedWarnings}")
@@ -386,10 +386,10 @@ if(COMPILER_SUPPORTS_SYSTEM_HDR_PREFIX)
     add_definitions(--system-header-prefix="FL/")
 endif()
 
-if(HAVE_X86_FISTPL)
-    message(STATUS "Compiling with x86 opcode support")
-    add_definitions(-DASM_F2I_YES)
-endif()
+#if(HAVE_X86_FISTPL)
+#    message(STATUS "Compiling with x86 opcode support")
+#    add_definitions(-DASM_F2I_YES)
+#endif()
 
 if (BuildForDebug)
 	set (CMAKE_BUILD_TYPE "Debug")
@@ -400,21 +400,21 @@ else (BuildForDebug)
 	
 	set (CMAKE_CXX_FLAGS_RELEASE ${BuildOptionsBasic})
 
-	if (BuildForAMD_X86_64)
-		set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${BuildOptions_x86_64AMD}")
-	endif (BuildForAMD_X86_64)
-	
-	if (BuildForCore2_X86_64)
-			set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${BuildOptions_X86_64Core2}")
-	endif (BuildForCore2_X86_64)
-
-	if (SUPPORT_SSE)
-		set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${BuildOptions_SSE}")
-	endif (SUPPORT_SSE)
-	
-	if (SUPPORT_NEON AND NOT NoNeonPlease)
-		set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${BuildOptions_NEON}")
-	endif (SUPPORT_NEON AND NOT NoNeonPlease)
+        #if (BuildForAMD_X86_64)
+	#	set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${BuildOptions_x86_64AMD}")
+	#endif (BuildForAMD_X86_64)
+	#
+	#if (BuildForCore2_X86_64)
+	#		set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${BuildOptions_X86_64Core2}")
+	#endif (BuildForCore2_X86_64)
+	#
+	#if (SUPPORT_SSE)
+	#	set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${BuildOptions_SSE}")
+	#endif (SUPPORT_SSE)
+	#
+	#if (SUPPORT_NEON AND NOT NoNeonPlease)
+	#	set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${BuildOptions_NEON}")
+	#endif (SUPPORT_NEON AND NOT NoNeonPlease)
 
 	message (STATUS "Building for ${CMAKE_BUILD_TYPE}, flags: ${CMAKE_CXX_FLAGS_RELEASE}")
 endif (BuildForDebug)
