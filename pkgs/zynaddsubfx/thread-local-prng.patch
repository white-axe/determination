# Determination - Deterministic rendering environment for white-axe's music
# Copyright (C) 2024 Liu Hao <whiteaxe@tuta.io>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# When there's more than one ZynAddSubFX instance in the same Carla project,
# ZynAddSubFX is only started up once, but each instance gets its own JACK
# client. Each JACK client runs in a different thread and they may process audio
# concurrently if the JACK graph allows it. ZynAddSubFX's pseudorandom number
# generator state is a global variable, though, so that can cause concurrency-
# related nondeterminism. This patch makes the PRNG state thread-local to fix
# this and keep the output of ZynAddSubFX the same even if there's more than one
# ZynAddSubFX instance in the same project.

--- a/src/Misc/Util.cpp
+++ b/src/Misc/Util.cpp
@@ -40,7 +40,7 @@ namespace zyn {
 
 bool isPlugin = false;
 
-prng_t prng_state = 0x1234;
+thread_local prng_t prng_state = 0x1234;
 
 /*
  * Transform the velocity according the scaling parameter (velocity sensing)
--- a/src/Misc/Util.h
+++ b/src/Misc/Util.h
@@ -120,7 +120,7 @@ T array_max(const T *data, size_t len)
 //Random number generator
 
 typedef uint32_t prng_t;
-extern prng_t prng_state;
+extern thread_local prng_t prng_state;
 
 // Portable Pseudo-Random Number Generator
 inline prng_t prng_r(prng_t &p)
--- a/src/globals.cpp
+++ b/src/globals.cpp
@@ -29,9 +29,9 @@ void SYNTH_T::alias(bool randomize)
     // for deleting the buffers and also call it in the dtor
     denormalkillbuf.resize(buffersize);
     for(int i = 0; i < buffersize; ++i)
-        if(randomize)
-            denormalkillbuf[i] = (RND - 0.5f) * 1e-16;
-        else
+        //if(randomize)
+        //    denormalkillbuf[i] = (RND - 0.5f) * 1e-16;
+        //else
             denormalkillbuf[i] = 0;
 }
 
